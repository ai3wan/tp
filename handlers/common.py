# handlers/common.py

from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

import database as db
import keyboards.reply as kb
from FSM.states import Onboarding
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é
from handlers.course_flow import show_main_menu 

router = Router()

@router.message(Command("start"))
async def start_handler(message: Message, state: FSMContext):
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç) –∏ –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ ID
    user_db_id = await db.add_user(
        telegram_id=message.from_user.id,
        first_name=message.from_user.first_name,
        username=message.from_user.username
    )
    
    # --- –£–ü–†–û–©–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê ---
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å
    bookmark = await db.get_user_bookmark(message.from_user.id)
    
    # –ï—Å–ª–∏ –∫—É—Ä—Å–∞ –Ω–µ—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É—Ä—Å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏ (ID = 1) –∏ –Ω–∞—á–∏–Ω–∞–µ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
    if not bookmark or not bookmark['current_course_id']:
        await state.set_state(Onboarding.q1_thoughts)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —Å —Ç–µ–∫—Å—Ç–æ–º
        import os
        from aiogram.types import FSInputFile
        
        video_path = os.path.join(os.path.dirname(os.path.dirname(__file__)), "assets", "welcome.mp4")
        video_file = FSInputFile(video_path)
        
        await message.answer_video(
            video=video_file,
            caption="üëã **–ü—Ä–∏–≤–µ—Ç!**\n\n"
                    "–¢–∏—Ö–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ –º—ã –ø–æ–º–æ–≥–∞–µ–º –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–≤–æ—ë–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º –∑–¥–æ—Ä–æ–≤—å–µ –∏ –º–µ–Ω—Ç–∞–ª—å–Ω–æ–º –∫–æ–º—Ñ–æ—Ä—Ç–µ.\n\n"
                    "üìö **–ó–¥–µ—Å—å –Ω–µ—Ç —Å–∫—É—á–Ω—ã—Ö –ª–µ–∫—Ü–∏–π.**\n"
                    "–í–º–µ—Å—Ç–µ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∞–º–∏ –º—ã —Å–æ–∑–¥–∞–ª–∏:\n\n"
                    "‚Ä¢ **–ß—ë—Ç–∫—É—é –∏ —ë–º–∫—É—é —Ç–µ–æ—Ä–∏—é** ‚Äî —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç\n"
                    "‚Ä¢ **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã**, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–≤–ª–µ–∫–∞—é—Ç, –∞ –Ω–µ —É—Å—ã–ø–ª—è—é—Ç\n"
                    "‚Ä¢ **–ù–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏** –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∂–∏–∑–Ω–∏\n\n"
                    "üí° **–ö–∞–∂–¥–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞** ‚Äî —ç—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —à–∞–≥ –∫ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—é, —Ñ–æ–∫—É—Å—É –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –æ–ø–æ—Ä–µ.\n\n"
                    "‚ú® **–î–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è –±–ª–∏–∂–µ?**\n"
                    "–û—Ç–≤–µ—Ç—å –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.",
            reply_markup=kb.onboarding_start_kb
        )
    else:
        # –ï—Å–ª–∏ –∫—É—Ä—Å —É–∂–µ –µ—Å—Ç—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await show_main_menu(message, message.from_user.id)

# –≠—Ç–æ—Ç —Ö–µ–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ª—é–±–æ–π –∏–∑ –¥–≤—É—Ö –ø–µ—Ä–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
@router.message(F.text.in_({"üöÄ –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º", "üôÇ –ü–æ–µ—Ö–∞–ª–∏"}))
async def start_onboarding_q1(message: Message, state: FSMContext):
    await state.set_state(Onboarding.q1_thoughts)
    await message.answer(
        "–ë—ã–≤–∞–µ—Ç, —á—Ç–æ –º—ã—Å–ª–∏ –Ω–∞—á–∏–Ω–∞—é—Ç –∫—Ä—É–∂–∏—Ç—å—Å—è, –∏ —Å–ª–æ–∂–Ω–æ –∏—Ö –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å?",
        reply_markup=kb.onboarding_q1_kb
    )