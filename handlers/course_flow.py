# handlers/course_flow.py

from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery
from aiogram.fsm.context import FSMContext
import importlib

import database as db
import keyboards.reply as kb
import keyboards.inline as ikb # <-- –î–û–ë–ê–í–¨–¢–ï –≠–¢–£ –°–¢–†–û–ö–£

router = Router()


# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (–£–ü–†–û–©–ï–ù–ù–ê–Ø) ---
async def show_main_menu(message: Message, user_id: int):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –∫—É—Ä—Å–∞ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏."""
    try:
        bookmark = await db.get_user_bookmark(user_id)
        
        # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫—É—Ä—Å–∞, —Å–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ
        if not bookmark or not bookmark['current_course_id']:
            await message.answer("–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
            return
        
        course_id = bookmark['current_course_id']
        course_info = await db.get_course_by_id(course_id)
        
        # --- –£–ü–†–û–©–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –î–õ–Ø –ö–£–†–°–ê –¢–†–ï–í–û–ñ–ù–û–°–¢–ò ---
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ–π–¥–µ–Ω –ª–∏ –∫—É—Ä—Å –ø–æ–ª–Ω–æ—Å—Ç—å—é (42 –º–æ–¥—É–ª—è)
        progress = await db.get_all_completed_modules_for_course(user_id, course_id)
        if len(progress) >= 42:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç
            all_results = await db.get_all_assessment_results(user_id, course_id)
            if all_results.get('final'):
                main_button_text = "–ö—É—Ä—Å –∑–∞–≤–µ—Ä—à–µ–Ω"
            else:
                main_button_text = "–û—Ü–µ–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å"
        else:
            # 2. –ï—Å–ª–∏ –∫—É—Ä—Å –Ω–µ –ø—Ä–æ–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –Ω–∞—á–∞–ª—å–Ω—ã–π –ø—É–ª—å—Å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏
            initial_assessment = await db.get_initial_assessment_result(user_id, course_id)
            if not initial_assessment:
                # 3. –ï—Å–ª–∏ –ø—É–ª—å—Å–∞ –Ω–µ –±—ã–ª–æ, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –µ–≥–æ –ø—Ä–æ–π—Ç–∏
                main_button_text = "–ü—Ä–æ–π—Ç–∏ –Ω–∞—á–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É"
            else:
                # 4. –ï—Å–ª–∏ –ø—É–ª—å—Å –±—ã–ª, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–æ–¥—É–ª—å –∏–∑ –∑–∞–∫–ª–∞–¥–∫–∏
                main_button_text = f"‚ñ∂Ô∏è –î–µ–Ω—å {bookmark['current_day']}, –ú–æ–¥—É–ª—å {bookmark['current_module']}"

        # --- –ö–æ–Ω–µ—Ü —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ ---

        main_menu_kb = kb.ReplyKeyboardMarkup(
            keyboard=[
                [kb.KeyboardButton(text=main_button_text), kb.KeyboardButton(text="üìö –í—ã–±—Ä–∞—Ç—å –º–æ–¥—É–ª—å")],
                [kb.KeyboardButton(text="üôè –ü—Ä–∞–∫—Ç–∏–∫–∏"), kb.KeyboardButton(text="üôç –ü—Ä–æ—Ñ–∏–ª—å")]
            ],
            resize_keyboard=True
        )
        await message.answer("ü™∑", reply_markup=main_menu_kb)
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ show_main_menu: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è ---

# 1. –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É "–î–µ–Ω—å X, –ú–æ–¥—É–ª—å Y" –∏–ª–∏ –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
@router.message(F.text.regexp(r'^‚ñ∂Ô∏è –î–µ–Ω—å \d+, –ú–æ–¥—É–ª—å \d+$'))
async def start_module(message: Message, state: FSMContext):
    user_id = message.from_user.id
    bookmark = await db.get_user_bookmark(user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–∫–ª–∞–¥–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if not bookmark or not bookmark['current_day']:
        await message.answer("–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
        return
    
    if bookmark['current_day'] > 14:
        await message.answer(
            "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!\n"
            "14-–¥–Ω–µ–≤–Ω—ã–π –∫—É—Ä—Å –ø–æ —Å–Ω–∏–∂–µ–Ω–∏—é —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à—ë–Ω. –≠—Ç–æ —Å–µ—Ä—å—ë–∑–Ω—ã–π —à–∞–≥ ‚Äî –∏ —Ç–≤–æ—è –ª–∏—á–Ω–∞—è –∑–∞—Å–ª—É–≥–∞ üôå\n\n"
            "–ó–∞ —ç—Ç–æ –≤—Ä–µ–º—è —É–¥–∞–ª–æ—Å—å —Ä–µ–≥—É–ª—è—Ä–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–æ–≤—ã–º–∏ –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏ –∏ –≥–ª—É–±–∂–µ –ø–æ–Ω—è—Ç—å —Å–µ–±—è. –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –µ—Å—Ç—å –Ω–∞–±–æ—Ä –∑–Ω–∞–Ω–∏–π –∏ —Ç–µ—Ö–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç. üåø\n\n"
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ —Å–µ–±–µ! –ü—É—Å—Ç—å —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–∏–≤—ã—á–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, –∞ —Ç—Ä–µ–≤–æ–≥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤—Å—ë —Ä–µ–∂–µ üí´"
        )
        return

    # –ü–†–û–í–ï–†–ö–ê: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–æ—à–µ–ª –Ω–∞—á–∞–ª—å–Ω—ã–π –ø—É–ª—å—Å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏, –±–ª–æ–∫–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –º–æ–¥—É–ª—è–º
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É–ª—å—Å –¥–ª—è –∫—É—Ä—Å–∞ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏ (ID = 1), –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è
    initial_assessment = await db.get_initial_assessment_result(user_id, 1)  # –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫—É—Ä—Å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏
    if not initial_assessment:
        await message.answer(
            "üîí –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –º–æ–¥—É–ª—è–º –∫—É—Ä—Å–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π—Ç–∏ –Ω–∞—á–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É.\n\n"
            "–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –ª—É—á—à–µ –ø–æ–¥—Å—Ç—Ä–æ–∏—Ç—å –∫—É—Ä—Å –ø–æ–¥ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ –æ—Ç—Å–ª–µ–¥–∏—Ç—å –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å.\n\n"
            "–ì–æ—Ç–æ–≤—ã –ø—Ä–æ–π—Ç–∏ –ø—É–ª—å—Å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏?",
            reply_markup=kb.ReplyKeyboardMarkup(keyboard=[
                [kb.KeyboardButton(text="‚úÖ –î–∞, –ø—Ä–æ–π—Ç–∏ –ø—É–ª—å—Å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏")],
                [kb.KeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
            ], resize_keyboard=True)
        )
        return

    # –ü–æ–ø—ã—Ç–∫–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è
    day = bookmark['current_day']
    module = bookmark['current_module']
    module_name = f"handlers.modules.day_{day}_module_{module}"
    
    try:
        # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–π –º–æ–¥—É–ª—å
        module_handler = importlib.import_module(module_name)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–¥—É–ª—è
        function_name = f"start_day_{day}_module_{module}"
        
        if hasattr(module_handler, function_name):
            # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–¥—É–ª—å
            await getattr(module_handler, function_name)(message, state)
        else:
            # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
            await show_module_placeholder(message, day, module)
            
    except ImportError:
        # –ï—Å–ª–∏ –º–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
        await show_module_placeholder(message, day, module)

async def show_module_placeholder(message: Message, day: int, module: int):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –º–æ–¥—É–ª—è, –∫–æ—Ç–æ—Ä—ã–π –µ—â–µ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω."""
    course_info = await db.get_course_by_id(1)  # –ö—É—Ä—Å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏
    
    await message.answer(
        f"üìñ –ö—É—Ä—Å ¬´{course_info['emoji']} {course_info['title']}¬ª\n"
        f"**–î–µ–Ω—å {day}, –ú–æ–¥—É–ª—å {module}**\n\n"
        "–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ç–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ –º–æ–¥—É–ª—è...\n\n"
        "üöß –ú–æ–¥—É–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ!",
        parse_mode="Markdown",
        reply_markup=kb.module_navigation_kb
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–π—Ç–∏ –Ω–∞—á–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É"
@router.message(F.text == "–ü—Ä–æ–π—Ç–∏ –Ω–∞—á–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É")
async def start_initial_assessment(message: Message, state: FSMContext):
    from handlers.assessments.anxiety_test import start_anxiety_test
    await start_anxiety_test(message, state)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ö—É—Ä—Å –∑–∞–≤–µ—Ä—à–µ–Ω"
@router.message(F.text == "–ö—É—Ä—Å –∑–∞–≤–µ—Ä—à–µ–Ω")
async def show_course_completion(message: Message):
    user_id = message.from_user.id
    bookmark = await db.get_user_bookmark(user_id)
    course_id = bookmark['current_course_id'] if bookmark and bookmark['current_course_id'] else 1
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤
    all_results = await db.get_all_assessment_results(user_id, course_id)
    initial_score = all_results.get('initial', {}).get('score', 0)
    final_score = all_results.get('final', {}).get('score', 0)
    difference = final_score - initial_score
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–Ω–∏—Ü—ã
    if difference <= -10:
        result_message = "‚ú® –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –¢—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å —Å–Ω–∏–∑–∏–ª–∞—Å—å –∑–∞–º–µ—Ç–Ω–æ. –ü—Ä–æ–¥–æ–ª–∂–∞–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∞–∫—Ç–∏–∫–∏ ‚Äî –æ–Ω–∏ —É–∂–µ –ø—Ä–∏–Ω–æ—Å—è—Ç –ø–ª–æ–¥—ã."
    elif -9 <= difference <= -4:
        result_message = "üí´ –ï—Å—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Å–¥–≤–∏–≥. –†–µ–≥—É–ª—è—Ä–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ–º–æ–∂–µ—Ç –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ —É—Å–∏–ª–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç."
    elif -3 <= difference <= 3:
        result_message = "üåø –ó–Ω–∞—á–∏–º—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫ –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å."
    elif 4 <= difference <= 9:
        result_message = "‚öñÔ∏è –£—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏ –Ω–µ–º–Ω–æ–≥–æ –≤—ã—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø—Ä–∞–∫—Ç–∏–∫–∞–º –∏–ª–∏ –ø—Ä–æ–π—Ç–∏ –∫—É—Ä—Å –∑–∞–Ω–æ–≤–æ, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –±–∞–ª–∞–Ω—Å."
    else:  # difference >= 10
        result_message = "‚ù§Ô∏è –í–∏–¥–Ω–æ, —á—Ç–æ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å —É—Å–∏–ª–∏–ª–∞—Å—å. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∞–∫—Ç–∏–∫–∏, –∞ –µ—Å–ª–∏ —Ç—Ä–µ–≤–æ–≥–∞ –º–µ—à–∞–µ—Ç –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏ ‚Äî —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É."
    
    # –°–æ–∑–¥–∞–µ–º reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
    
    await message.answer(
        f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!\n"
        f"14-–¥–Ω–µ–≤–Ω—ã–π –∫—É—Ä—Å –ø–æ —Å–Ω–∏–∂–µ–Ω–∏—é —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à—ë–Ω. –≠—Ç–æ —Å–µ—Ä—å—ë–∑–Ω—ã–π —à–∞–≥ ‚Äî –∏ —Ç–≤–æ—è –ª–∏—á–Ω–∞—è –∑–∞—Å–ª—É–≥–∞ üôå\n\n"
        f"–ó–∞ —ç—Ç–æ –≤—Ä–µ–º—è —É–¥–∞–ª–æ—Å—å —Ä–µ–≥—É–ª—è—Ä–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–æ–≤—ã–º–∏ –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏ –∏ –≥–ª—É–±–∂–µ –ø–æ–Ω—è—Ç—å —Å–µ–±—è. –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –µ—Å—Ç—å –Ω–∞–±–æ—Ä –∑–Ω–∞–Ω–∏–π –∏ —Ç–µ—Ö–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç. üåø\n\n"
        f"–°–ø–∞—Å–∏–±–æ –∑–∞ –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ —Å–µ–±–µ! –ü—É—Å—Ç—å —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–∏–≤—ã—á–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, –∞ —Ç—Ä–µ–≤–æ–≥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤—Å—ë —Ä–µ–∂–µ üí´\n\n"
        f"üìä **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è**\n\n"
        f"–ü—É–ª—å—Å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏ –¥–æ –∫—É—Ä—Å–∞: {initial_score}/42 –±–∞–ª–ª–æ–≤\n"
        f"–ü—É–ª—å—Å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –∫—É—Ä—Å–∞: {final_score}/42 –±–∞–ª–ª–æ–≤\n"
        f"–†–∞–∑–Ω–∏—Ü–∞: {difference:+d} –±–∞–ª–ª–æ–≤\n\n"
        f"{result_message}",
        reply_markup=ReplyKeyboardMarkup(keyboard=[
            [KeyboardButton(text="üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å")],
            [KeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
        ], resize_keyboard=True)
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å"
@router.message(F.text == "üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å")
async def handle_reset_progress_reply(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å' —á–µ—Ä–µ–∑ reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É."""
    from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
    await message.answer(
        "‚ö†Ô∏è –í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å?\n"
        "üóëÔ∏è –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.",
        reply_markup=ReplyKeyboardMarkup(keyboard=[
            [KeyboardButton(text="–î–∞ ‚úÖ"), KeyboardButton(text="–ù–µ—Ç ‚ùå")]
        ], resize_keyboard=True)
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–∞ ‚úÖ"
@router.message(F.text == "–î–∞ ‚úÖ")
async def handle_confirm_reset_reply(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞."""
    user_id = message.from_user.id
    bookmark = await db.get_user_bookmark(user_id)
    course_id = bookmark['current_course_id'] if bookmark and bookmark['current_course_id'] else 1
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –æ—Ü–µ–Ω–∫–∏
    await db.reset_progress_for_course(user_id, course_id)
    await db.reset_assessment_results(user_id, course_id)
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–∞–∫–ª–∞–¥–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await db.reset_user_bookmark(user_id)
    
    await message.answer(
        "‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω!\n\n"
        "üìò –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∫—É—Ä—Å–∞ –Ω–∞–∂–º–∏—Ç–µ ‚ñ∂Ô∏è /start",
        reply_markup=ReplyKeyboardRemove()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–µ—Ç ‚ùå"
@router.message(F.text == "–ù–µ—Ç ‚ùå")
async def handle_cancel_reset_reply(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–º–µ–Ω—ã —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞."""
    from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
    await message.answer(
        "‚ùå –°–±—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω",
        reply_markup=ReplyKeyboardMarkup(keyboard=[
            [KeyboardButton(text="üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å")],
            [KeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
        ], resize_keyboard=True)
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
@router.message(F.text == "üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main_from_completion(message: Message):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è."""
    await show_main_menu(message, message.from_user.id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Ü–µ–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å"
@router.message(F.text == "–û—Ü–µ–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å")
async def start_final_assessment(message: Message, state: FSMContext):
    from handlers.assessments.final_test import start_final_test
    await start_final_test(message, state)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –º–æ–¥—É–ª–µ–π (–¥—É–±–ª–∏—Ä—É–µ–º –∏–∑ menu.py –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞)
@router.message(F.text == "‚úÖ –î–∞, –ø—Ä–æ–π—Ç–∏ –ø—É–ª—å—Å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏")
async def start_test_from_blocked_modules_course(message: Message, state: FSMContext):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—Å–∏–ª—Å—è –ø—Ä–æ–π—Ç–∏ –ø—É–ª—å—Å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–æ–¥—É–ª—è–º."""
    from handlers.assessments.anxiety_test import start_anxiety_test
    await start_anxiety_test(message, state)

@router.message(F.text == "üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main_from_blocked_modules_course(message: Message):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –º–æ–¥—É–ª–µ–π."""
    await message.answer("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=ReplyKeyboardRemove())
    await show_main_menu(message, message.from_user.id)

# 2. –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ "–î–∞–≤–∞–π –ø–æ–≤—Ç–æ—Ä–∏–º"
@router.message(F.text == "üîÑ –î–∞–≤–∞–π –ø–æ–≤—Ç–æ—Ä–∏–º")
async def repeat_module(message: Message, state: FSMContext):
    user_id = message.from_user.id
    bookmark = await db.get_user_bookmark(user_id)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–º –º–æ–¥—É–ª–µ
    last_completed = await db.get_last_completed_module(user_id, bookmark['current_course_id'])
    
    if last_completed:
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–∫–ª–∞–¥–∫—É –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–º—É –º–æ–¥—É–ª—é
        await db.set_user_bookmark(user_id, bookmark['current_course_id'], last_completed['day'], last_completed['module'])
        await start_module(message, state)
    else:
        await message.answer("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–¥—É–ª—å –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è.")

# 3. –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ "–í—Å–µ —è—Å–Ω–æ"
@router.message(F.text == "‚úÖ –í—Å–µ —è—Å–Ω–æ")
async def complete_module(message: Message):
    user_id = message.from_user.id
    bookmark = await db.get_user_bookmark(user_id)

    # 1. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    await db.complete_module(
        user_id,
        bookmark['current_course_id'],
        bookmark['current_day'],
        bookmark['current_module']
    )
    
    # 2. –°–†–ê–ó–£ –ø–µ—Ä–µ–¥–≤–∏–≥–∞–µ–º –∑–∞–∫–ª–∞–¥–∫—É
    current_day = bookmark['current_day']
    current_module = bookmark['current_module']
    next_day, next_module = await db.advance_user_to_next_module(user_id, current_day, current_module)
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–¥—É–ª—å –¥–Ω—è
    if current_module == 3:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω –ª–∏ –≤–µ—Å—å –∫—É—Ä—Å (14 –¥–Ω–µ–π)
        if current_day == 14:  # –ò–º–µ–Ω–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ 14-–≥–æ –¥–Ω—è
            await message.answer(
                "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!\n"
                "14-–¥–Ω–µ–≤–Ω—ã–π –∫—É—Ä—Å –ø–æ —Å–Ω–∏–∂–µ–Ω–∏—é —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à—ë–Ω. –≠—Ç–æ —Å–µ—Ä—å—ë–∑–Ω—ã–π —à–∞–≥ ‚Äî –∏ —Ç–≤–æ—è –ª–∏—á–Ω–∞—è –∑–∞—Å–ª—É–≥–∞ üôå\n\n"
                "–ó–∞ —ç—Ç–æ –≤—Ä–µ–º—è —É–¥–∞–ª–æ—Å—å —Ä–µ–≥—É–ª—è—Ä–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–æ–≤—ã–º–∏ –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏ –∏ –≥–ª—É–±–∂–µ –ø–æ–Ω—è—Ç—å —Å–µ–±—è. –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –µ—Å—Ç—å –Ω–∞–±–æ—Ä –∑–Ω–∞–Ω–∏–π –∏ —Ç–µ—Ö–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç. üåø\n\n"
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ —Å–µ–±–µ! –ü—É—Å—Ç—å —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–∏–≤—ã—á–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, –∞ —Ç—Ä–µ–≤–æ–≥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤—Å—ë —Ä–µ–∂–µ üí´"
            )
            # –ü–æ—Å–ª–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            await show_main_menu(message, user_id)
        else:
            await message.answer(
                "–ú—ã –æ—Ç–ª–∏—á–Ω–æ –ø–æ—Ä–∞–±–æ—Ç–∞–ª–∏! ‚ú®\n"
                "–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã. –ó–∞–≤—Ç—Ä–∞ –Ω–∞—Å –∂–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥."
            )
            # –ï—Å–ª–∏ –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–µ–Ω, —Å—Ä–∞–∑—É –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            await show_main_menu(message, user_id)
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–¥—É–ª—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ –º–µ–Ω—é
        await message.answer(
            "–û—Ç–ª–∏—á–Ω–æ! –î–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ?",
            reply_markup=kb.after_module_kb
        )

# 4. –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ "–î–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ"
@router.message(F.text == "‚ñ∂Ô∏è –î–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ")
async def advance_to_next(message: Message, state: FSMContext):
    # –¢–µ–ø–µ—Ä—å —ç—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å,
    # —Ç–∞–∫ –∫–∞–∫ –∑–∞–∫–ª–∞–¥–∫–∞ —É–∂–µ –ø–µ—Ä–µ–¥–≤–∏–Ω—É—Ç–∞.
    await start_module(message, state)

# 5. –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ "–í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"
@router.message(F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main_menu(message: Message):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –º–æ–¥—É–ª—è."""
    await message.answer("–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=ReplyKeyboardRemove())
    await show_main_menu(message, message.from_user.id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫ (—É–¥–∞–ª–µ–Ω—ã - –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ reply –∫–Ω–æ–ø–∫–∏)