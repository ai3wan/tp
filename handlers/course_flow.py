# handlers/course_flow.py

from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
import importlib

import database as db
import keyboards.reply as kb
import keyboards.inline as ikb # <-- –î–û–ë–ê–í–¨–¢–ï –≠–¢–£ –°–¢–†–û–ö–£

router = Router()


# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (–£–ü–†–û–©–ï–ù–ù–ê–Ø) ---
async def show_main_menu(message: Message, user_id: int):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –∫—É—Ä—Å–∞ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏."""
    bookmark = await db.get_user_bookmark(user_id)
    
    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫—É—Ä—Å–∞, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É—Ä—Å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏ (ID = 1)
    if not bookmark or not bookmark['current_course_id']:
        await db.update_user_bookmark(user_id, 1, 1, 1)
        bookmark = await db.get_user_bookmark(user_id)
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–ª–∞–¥–∫–∏
    if not bookmark:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return
    
    course_id = bookmark['current_course_id']
    course_info = await db.get_course_by_id(course_id)
    
    # --- –£–ü–†–û–©–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –î–õ–Ø –ö–£–†–°–ê –¢–†–ï–í–û–ñ–ù–û–°–¢–ò ---
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ–π–¥–µ–Ω –ª–∏ –∫—É—Ä—Å –ø–æ–ª–Ω–æ—Å—Ç—å—é (42 –º–æ–¥—É–ª—è)
    progress = await db.get_all_completed_modules_for_course(user_id, course_id)
    if len(progress) >= 42:
        main_button_text = "–û—Ü–µ–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å"
    else:
        # 2. –ï—Å–ª–∏ –∫—É—Ä—Å –Ω–µ –ø—Ä–æ–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –Ω–∞—á–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç
        initial_assessment = await db.get_initial_assessment_result(user_id, course_id)
        if not initial_assessment:
            # 3. –ï—Å–ª–∏ —Ç–µ—Å—Ç–∞ –Ω–µ –±—ã–ª–æ, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –µ–≥–æ –ø—Ä–æ–π—Ç–∏
            main_button_text = "–ü—Ä–æ–π—Ç–∏ –Ω–∞—á–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É"
        else:
            # 4. –ï—Å–ª–∏ —Ç–µ—Å—Ç –±—ã–ª, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–æ–¥—É–ª—å –∏–∑ –∑–∞–∫–ª–∞–¥–∫–∏
            main_button_text = f"‚ñ∂Ô∏è –î–µ–Ω—å {bookmark['current_day']}, –ú–æ–¥—É–ª—å {bookmark['current_module']}"

    # --- –ö–æ–Ω–µ—Ü —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ ---

    main_menu_kb = kb.ReplyKeyboardMarkup(
        keyboard=[
            [kb.KeyboardButton(text=main_button_text), kb.KeyboardButton(text="üìö –í—ã–±—Ä–∞—Ç—å –º–æ–¥—É–ª—å")],
            [kb.KeyboardButton(text="üôè –ü—Ä–∞–∫—Ç–∏–∫–∏"), kb.KeyboardButton(text="üôç –ü—Ä–æ—Ñ–∏–ª—å")]
        ],
        resize_keyboard=True
    )
    await message.answer("–í–∞—à–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu_kb)

# --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è ---

# 1. –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É "–î–µ–Ω—å X, –ú–æ–¥—É–ª—å Y" –∏–ª–∏ –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
@router.message(F.text.regexp(r'^‚ñ∂Ô∏è –î–µ–Ω—å \d+, –ú–æ–¥—É–ª—å \d+$'))
async def start_module(message: Message, state: FSMContext):
    user_id = message.from_user.id
    bookmark = await db.get_user_bookmark(user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–∫–ª–∞–¥–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if not bookmark or not bookmark['current_day']:
        await show_main_menu(message, user_id)
        return
    
    if bookmark['current_day'] > 14:
        await show_main_menu(message, user_id)
        return

    # –ü–†–û–í–ï–†–ö–ê: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–æ—à–µ–ª –Ω–∞—á–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç, –±–ª–æ–∫–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –º–æ–¥—É–ª—è–º
    initial_assessment = await db.get_initial_assessment_result(user_id, bookmark['current_course_id'])
    if not initial_assessment:
        await message.answer(
            "üîí –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –º–æ–¥—É–ª—è–º –∫—É—Ä—Å–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π—Ç–∏ –Ω–∞—á–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É.\n\n"
            "–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –ª—É—á—à–µ –ø–æ–¥—Å—Ç—Ä–æ–∏—Ç—å –∫—É—Ä—Å –ø–æ–¥ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ –æ—Ç—Å–ª–µ–¥–∏—Ç—å –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å.\n\n"
            "–ì–æ—Ç–æ–≤—ã –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç?",
            reply_markup=kb.ReplyKeyboardMarkup(keyboard=[
                [kb.KeyboardButton(text="‚úÖ –î–∞, –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç")],
                [kb.KeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
            ], resize_keyboard=True)
        )
        return

    # –ü–æ–ø—ã—Ç–∫–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è
    day = bookmark['current_day']
    module = bookmark['current_module']
    module_name = f"handlers.modules.day_{day}_module_{module}"
    
    try:
        # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–π –º–æ–¥—É–ª—å
        module_handler = importlib.import_module(module_name)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–¥—É–ª—è
        function_name = f"start_day_{day}_module_{module}"
        
        if hasattr(module_handler, function_name):
            # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–¥—É–ª—å
            await getattr(module_handler, function_name)(message, state)
        else:
            # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
            await show_module_placeholder(message, day, module)
            
    except ImportError:
        # –ï—Å–ª–∏ –º–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
        await show_module_placeholder(message, day, module)

async def show_module_placeholder(message: Message, day: int, module: int):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –º–æ–¥—É–ª—è, –∫–æ—Ç–æ—Ä—ã–π –µ—â–µ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω."""
    course_info = await db.get_course_by_id(1)  # –ö—É—Ä—Å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏
    
    await message.answer(
        f"üìñ –ö—É—Ä—Å ¬´{course_info['emoji']} {course_info['title']}¬ª\n"
        f"**–î–µ–Ω—å {day}, –ú–æ–¥—É–ª—å {module}**\n\n"
        "–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ç–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ –º–æ–¥—É–ª—è...\n\n"
        "üöß –ú–æ–¥—É–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ!",
        parse_mode="Markdown",
        reply_markup=kb.module_navigation_kb
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–π—Ç–∏ –Ω–∞—á–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É"
@router.message(F.text == "–ü—Ä–æ–π—Ç–∏ –Ω–∞—á–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É")
async def start_initial_assessment(message: Message, state: FSMContext):
    from handlers.assessments.anxiety_test import start_anxiety_test
    await start_anxiety_test(message, state)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Ü–µ–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å"
@router.message(F.text == "–û—Ü–µ–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å")
async def start_final_assessment(message: Message, state: FSMContext):
    from handlers.assessments.anxiety_test import start_anxiety_final_test
    await start_anxiety_final_test(message, state)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –º–æ–¥—É–ª–µ–π (–¥—É–±–ª–∏—Ä—É–µ–º –∏–∑ menu.py –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞)
@router.message(F.text == "‚úÖ –î–∞, –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç")
async def start_test_from_blocked_modules_course(message: Message, state: FSMContext):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—Å–∏–ª—Å—è –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–æ–¥—É–ª—è–º."""
    from handlers.assessments.anxiety_test import start_anxiety_test
    await start_anxiety_test(message, state)

@router.message(F.text == "üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main_from_blocked_modules_course(message: Message):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –º–æ–¥—É–ª–µ–π."""
    await message.answer("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=ReplyKeyboardRemove())
    await show_main_menu(message, message.from_user.id)

# 2. –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ "–î–∞–≤–∞–π –ø–æ–≤—Ç–æ—Ä–∏–º"
@router.message(F.text == "üîÑ –î–∞–≤–∞–π –ø–æ–≤—Ç–æ—Ä–∏–º")
async def repeat_module(message: Message, state: FSMContext):
    await start_module(message, state)

# 3. –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ "–í—Å–µ —è—Å–Ω–æ"
@router.message(F.text == "‚úÖ –í—Å–µ —è—Å–Ω–æ")
async def complete_module(message: Message):
    user_id = message.from_user.id
    bookmark = await db.get_user_bookmark(user_id)

    # 1. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    await db.complete_module(
        user_id,
        bookmark['current_course_id'],
        bookmark['current_day'],
        bookmark['current_module']
    )
    
    # 2. –°–†–ê–ó–£ –ø–µ—Ä–µ–¥–≤–∏–≥–∞–µ–º –∑–∞–∫–ª–∞–¥–∫—É
    current_day = bookmark['current_day']
    current_module = bookmark['current_module']
    await db.advance_user_to_next_module(user_id, current_day, current_module)
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–¥—É–ª—å –¥–Ω—è
    if current_module == 3:
        await message.answer(
            "–ú—ã –æ—Ç–ª–∏—á–Ω–æ –ø–æ—Ä–∞–±–æ—Ç–∞–ª–∏! ‚ú®\n"
            "–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã. –ó–∞–≤—Ç—Ä–∞ –Ω–∞—Å –∂–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥."
        )
        # –ï—Å–ª–∏ –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–µ–Ω, —Å—Ä–∞–∑—É –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await show_main_menu(message, user_id)
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–¥—É–ª—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ –º–µ–Ω—é
        await message.answer(
            "–û—Ç–ª–∏—á–Ω–æ! –î–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ?",
            reply_markup=kb.after_module_kb
        )

# 4. –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ "–î–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ"
@router.message(F.text == "‚ñ∂Ô∏è –î–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ")
async def advance_to_next(message: Message, state: FSMContext):
    # –¢–µ–ø–µ—Ä—å —ç—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å,
    # —Ç–∞–∫ –∫–∞–∫ –∑–∞–∫–ª–∞–¥–∫–∞ —É–∂–µ –ø–µ—Ä–µ–¥–≤–∏–Ω—É—Ç–∞.
    await start_module(message, state)

# 5. –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ "–í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"
@router.message(F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main_menu(message: Message):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –º–æ–¥—É–ª—è."""
    await message.answer("–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=ReplyKeyboardRemove())
    await show_main_menu(message, message.from_user.id)