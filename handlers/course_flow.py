import asyncpg
from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardRemove, KeyboardButton

import database as db
import keyboards.reply as kb
import keyboards.inline as ikb

router = Router()


async def show_main_menu(message: Message, user_id: int, pool: asyncpg.Pool):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å —É–º–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π."""
    bookmark = await db.get_user_bookmark(pool, user_id)
    
    if not bookmark or not bookmark['current_course_id']:
        courses = await db.get_all_courses(pool)
        await message.answer(
            "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫—É—Ä—Å–∞. –î–∞–≤–∞–π—Ç–µ –≤—ã–±–µ—Ä–µ–º –æ–¥–∏–Ω!",
            reply_markup=ikb.get_courses_kb(courses)
        )
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ:", reply_markup=ReplyKeyboardRemove())
        return

    course_id = bookmark['current_course_id']
    course_info = await db.get_course_by_id(pool, course_id)
    
    progress = await db.get_all_completed_modules_for_course(pool, user_id, course_id)
    if len(progress) >= 42:
        main_button_text = f"–ö—É—Ä—Å ¬´{course_info['emoji']} {course_info['title']}¬ª. –û—Ü–µ–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å"
    else:
        initial_assessment = await db.get_initial_assessment_result(pool, user_id, course_id)
        if not initial_assessment:
            main_button_text = f"–ö—É—Ä—Å ¬´{course_info['emoji']} {course_info['title']}¬ª. –ü—Ä–æ–π—Ç–∏ –Ω–∞—á–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É"
        else:
            main_button_text = f"–ö—É—Ä—Å ¬´{course_info['emoji']} {course_info['title']}¬ª. –î–µ–Ω—å {bookmark['current_day']}. –ú–æ–¥—É–ª—å {bookmark['current_module']}"

    main_menu_kb = kb.ReplyKeyboardMarkup(
        keyboard=[
            [kb.KeyboardButton(text=main_button_text)],
            [kb.KeyboardButton(text="–í—ã–±—Ä–∞—Ç—å –∫—É—Ä—Å"), kb.KeyboardButton(text="–í—ã–±—Ä–∞—Ç—å –º–æ–¥—É–ª—å")],
            [kb.KeyboardButton(text="–ü—Ä–∞–∫—Ç–∏–∫–∏"), kb.KeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—å")]
        ],
        resize_keyboard=True
    )
    await message.answer("–í–∞—à–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu_kb)


@router.message(F.text.startswith(("–ù–∞—á–∞—Ç—å ¬´", "–ö—É—Ä—Å ¬´")))
async def start_module(message: Message, pool: asyncpg.Pool):
    user_id = message.from_user.id
    bookmark = await db.get_user_bookmark(pool, user_id)
    
    if not bookmark or not bookmark['current_course_id']:
        await show_main_menu(message, user_id, pool)
        return

    if bookmark['current_day'] > 14:
        await show_main_menu(message, user_id, pool)
        return

    course_info = await db.get_course_by_id(pool, bookmark['current_course_id'])

    await message.answer(
        f"üìñ –ö—É—Ä—Å ¬´{course_info['emoji']} {course_info['title']}¬ª\n"
        f"**–î–µ–Ω—å {bookmark['current_day']}, –ú–æ–¥—É–ª—å {bookmark['current_module']}**\n\n"
        f"–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ç–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ –º–æ–¥—É–ª—è...",
        parse_mode="Markdown",
        reply_markup=kb.module_navigation_kb
    )

@router.message(F.text == "üîÑ –î–∞–≤–∞–π –ø–æ–≤—Ç–æ—Ä–∏–º")
async def repeat_module(message: Message, pool: asyncpg.Pool):
    await start_module(message, pool)

@router.message(F.text == "‚úÖ –í—Å–µ —è—Å–Ω–æ")
async def complete_module(message: Message, pool: asyncpg.Pool):
    user_id = message.from_user.id
    bookmark = await db.get_user_bookmark(pool, user_id)

    if not bookmark or not bookmark['current_course_id']:
        await show_main_menu(message, user_id, pool)
        return

    await db.complete_module(
        pool,
        user_id,
        bookmark['current_course_id'],
        bookmark['current_day'],
        bookmark['current_module']
    )
    
    current_day = bookmark['current_day']
    current_module = bookmark['current_module']
    await db.advance_user_to_next_module(pool, user_id, current_day, current_module)
    
    if current_module == 3:
        await message.answer(
            "–ú—ã –æ—Ç–ª–∏—á–Ω–æ –ø–æ—Ä–∞–±–æ—Ç–∞–ª–∏! ‚ú®\n"
            "–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã. –ó–∞–≤—Ç—Ä–∞ –Ω–∞—Å –∂–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥."
        )
        await show_main_menu(message, user_id, pool)
    else:
        await message.answer(
            "–û—Ç–ª–∏—á–Ω–æ! –î–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ?",
            reply_markup=kb.after_module_kb
        )

@router.message(F.text == "‚ñ∂Ô∏è –î–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ")
async def advance_to_next(message: Message, pool: asyncpg.Pool):
    await start_module(message, pool)

@router.message(F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main_menu(message: Message, pool: asyncpg.Pool):
    await message.answer("–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=ReplyKeyboardRemove())
    await show_main_menu(message, message.from_user.id, pool)