# handlers/modules/day_1_module_3.py

from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import os

router = Router()

class Day1Module3States(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –î–Ω—è 1, –ú–æ–¥—É–ª—è 3."""
    step_1 = State()  # –†–µ—Ñ–ª–µ–∫—Å–∏—è
    step_2 = State()  # –í—Å–ø—ã—à–∫–∏ —Ç—Ä–µ–≤–æ–≥–∏
    step_3 = State()  # –í–µ—á–µ—Ä–Ω—è—è —Ä–µ—Ñ–ª–µ–∫—Å–∏—è
    step_4 = State()  # –ó–∞–º–µ—á–∞—Ç—å —Ç—Ä–µ–≤–æ–≥—É
    step_5 = State()  # –ë–æ–ª—å—à–µ —Å–≤–æ–±–æ–¥—ã
    step_6 = State()  # –ü—Ä–∞–∫—Ç–∏–∫–∞ —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏
    step_7 = State()  # –î—ã—Ö–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞
    step_8 = State()  # –ü–æ–¥–≤–µ–¥–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤ 1
    step_9 = State()  # –ü–æ–¥–≤–µ–¥–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤ 2
    step_10 = State()  # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å –º–µ–¥–∏—Ç–∞—Ü–∏–µ–π

def get_step_keyboard(step: int) -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —à–∞–≥–∞ –¥–∏–∞–ª–æ–≥–∞."""
    keyboards = {
        1: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üåø –°—Ç–∞–ª–æ –ª–µ–≥—á–µ")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        ),
        2: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üí° –ü–æ–Ω–∏–º–∞—Ç—å —Ç—Ä–µ–≤–æ–≥—É –≤–∞–∂–Ω–æ")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        ),
        3: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="‚ö° –¢—Ä–µ–≤–æ–≥–∞ ‚Äî —ç—Ç–æ –≤—Å–ø—ã—à–∫–∏")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        ),
        4: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="ü™û –ó–µ—Ä–∫–∞–ª–æ –¥–ª—è —Ç—Ä–µ–≤–æ–≥–∏")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        ),
        5: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üëÄ –ó–∞–º–µ—á–∞—Ç—å —Ç—Ä–µ–≤–æ–≥—É —Ä–∞–Ω—å—à–µ")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        ),
        6: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üïäÔ∏è –ë–æ–ª—å—à–µ —Å–≤–æ–±–æ–¥—ã")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        ),
        7: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        ),
        8: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="ü§î –ü–æ–Ω—è—Ç–Ω–æ")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        ),
        9: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üå∏ –ó–∞–ø–æ–º–Ω–∏–ª")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        ),
        10: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üôå –û—Ç–ª–∏—á–Ω–æ")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        )
    }
    return keyboards.get(step, ReplyKeyboardMarkup(keyboard=[], resize_keyboard=True))

@router.message(F.text == "‚ñ∂Ô∏è –î–µ–Ω—å 1, –ú–æ–¥—É–ª—å 3")
async def start_day_1_module_3(message: Message, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç—Ä–µ—Ç–∏–π –º–æ–¥—É–ª—å –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è."""
    await state.set_state(Day1Module3States.step_1)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —Å –¥—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π
    video_path = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(__file__))), "assets", "practice_1.mp4")
    video_file = FSInputFile(video_path)
    
    await message.answer_video(
        video=video_file,
        caption="‚ú® –ü—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å –≤–µ—á–µ—Ä–Ω–∏–π –º–æ–¥—É–ª—å, –¥–∞–≤–∞–π –Ω–µ–º–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–∏–º—Å—è.\n"
                "üå¨Ô∏è –í–µ—Ä–Ω—ë–º—Å—è –∫ –Ω–∞—à–µ–π –ø—Ä–∞–∫—Ç–∏–∫–µ –¥—ã—Ö–∞–Ω–∏—è: –≤–¥–æ—Ö –Ω–∞ 4 —Å–µ–∫—É–Ω–¥—ã ‚è±Ô∏è, –≤—ã–¥–æ—Ö –Ω–∞ 6.\n"
                "–ü–æ–¥—ã—à–∏ —Ç–∞–∫ –ø–∞—Ä—É –º–∏–Ω—É—Ç ‚Äî –∏ —Ç–µ–ª–æ —Å—Ç–∞–Ω–µ—Ç —Å–ø–æ–∫–æ–π–Ω–µ–µ üòå",
        reply_markup=get_step_keyboard(1)
    )

# –®–∞–≥ 1 -> –®–∞–≥ 2
@router.message(Day1Module3States.step_1, F.text == "üåø –°—Ç–∞–ª–æ –ª–µ–≥—á–µ")
async def step_1_to_2(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —à–∞–≥–∞ 1 –∫ —à–∞–≥—É 2."""
    await state.set_state(Day1Module3States.step_2)
    
    await message.answer(
        "–ó–Ω–∞–µ—à—å, –∫–æ–≥–¥–∞ –º—ã –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–µ–º –¥–µ–Ω—å ‚Äî —Ç—Ä–µ–≤–æ–≥–∞ —á–∞—Å—Ç–æ –ø—Ä–æ–ª–µ—Ç–∞–µ—Ç –º–∏–º–æ —Å–æ–∑–Ω–∞–Ω–∏—è. –ù–æ –µ—Å–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –∏ –≤—Å–ø–æ–º–Ω–∏—Ç—å –µ—ë –º–æ–º–µ–Ω—Ç—ã, –º—ã –Ω–∞—á–∏–Ω–∞–µ–º –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å, –∫–∞–∫ –æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç.",
        reply_markup=get_step_keyboard(2)
    )

# –®–∞–≥ 2 -> –®–∞–≥ 3
@router.message(Day1Module3States.step_2, F.text == "üí° –ü–æ–Ω–∏–º–∞—Ç—å —Ç—Ä–µ–≤–æ–≥—É –≤–∞–∂–Ω–æ")
async def step_2_to_3(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —à–∞–≥–∞ 2 –∫ —à–∞–≥—É 3."""
    await state.set_state(Day1Module3States.step_3)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º (–µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    image_path = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(__file__))), "assets", "d1m3", "d1m3_2.jpg")
    
    if os.path.exists(image_path):
        image_file = FSInputFile(image_path)
        await message.answer_photo(
            photo=image_file,
            caption="–≠—Ç–æ –∏ –µ—Å—Ç—å —Ä–µ—Ñ–ª–µ–∫—Å–∏—è ‚úçÔ∏è –û–Ω–∞ –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞–º–µ—Ç–∏—Ç—å: —Ç—Ä–µ–≤–æ–≥–∞ ‚Äî –Ω–µ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π —Ñ–æ–Ω, –∞ –≤—Å–ø—ã—à–∫–∏ –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã. –ö–æ–≥–¥–∞ –º—ã –∏—Ö –≤–∏–¥–∏–º, —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ª–µ–≥—á–µ —Å –Ω–∏–º–∏ —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è.",
            reply_markup=get_step_keyboard(3)
        )
    else:
        await message.answer(
            "–≠—Ç–æ –∏ –µ—Å—Ç—å —Ä–µ—Ñ–ª–µ–∫—Å–∏—è ‚úçÔ∏è –û–Ω–∞ –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞–º–µ—Ç–∏—Ç—å: —Ç—Ä–µ–≤–æ–≥–∞ ‚Äî –Ω–µ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π —Ñ–æ–Ω, –∞ –≤—Å–ø—ã—à–∫–∏ –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã. –ö–æ–≥–¥–∞ –º—ã –∏—Ö –≤–∏–¥–∏–º, —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ª–µ–≥—á–µ —Å –Ω–∏–º–∏ —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è.",
            reply_markup=get_step_keyboard(3)
        )

# –®–∞–≥ 3 -> –®–∞–≥ 4
@router.message(Day1Module3States.step_3, F.text == "‚ö° –¢—Ä–µ–≤–æ–≥–∞ ‚Äî —ç—Ç–æ –≤—Å–ø—ã—à–∫–∏")
async def step_3_to_4(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —à–∞–≥–∞ 3 –∫ —à–∞–≥—É 4."""
    await state.set_state(Day1Module3States.step_4)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º (–µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    image_path = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(__file__))), "assets", "d1m3", "d1m3_3.jpg")
    
    if os.path.exists(image_path):
        image_file = FSInputFile(image_path)
        await message.answer_photo(
            photo=image_file,
            caption="–ö–∞–∂–¥—ã–π –≤–µ—á–µ—Ä –º—ã –±—É–¥–µ–º —É–¥–µ–ª—è—Ç—å –ø–∞—Ä—É –º–∏–Ω—É—Ç —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏ ‚úçÔ∏è –≠—Ç–æ –∫–∞–∫ –º–∞–ª–µ–Ω—å–∫–æ–µ –∑–µ—Ä–∫–∞–ª–æ ‚Äî —Ç—ã —É—á–∏—à—å—Å—è —Å–º–æ—Ç—Ä–µ—Ç—å, –≥–¥–µ –∏–º–µ–Ω–Ω–æ –ø–æ—è–≤–ª—è–ª–∞—Å—å —Ç—Ä–µ–≤–æ–≥–∞ –∑–∞ –¥–µ–Ω—å.",
            reply_markup=get_step_keyboard(4)
        )
    else:
        await message.answer(
            "–ö–∞–∂–¥—ã–π –≤–µ—á–µ—Ä –º—ã –±—É–¥–µ–º —É–¥–µ–ª—è—Ç—å –ø–∞—Ä—É –º–∏–Ω—É—Ç —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏ ‚úçÔ∏è –≠—Ç–æ –∫–∞–∫ –º–∞–ª–µ–Ω—å–∫–æ–µ –∑–µ—Ä–∫–∞–ª–æ ‚Äî —Ç—ã —É—á–∏—à—å—Å—è —Å–º–æ—Ç—Ä–µ—Ç—å, –≥–¥–µ –∏–º–µ–Ω–Ω–æ –ø–æ—è–≤–ª—è–ª–∞—Å—å —Ç—Ä–µ–≤–æ–≥–∞ –∑–∞ –¥–µ–Ω—å.",
            reply_markup=get_step_keyboard(4)
        )

# –®–∞–≥ 4 -> –®–∞–≥ 5
@router.message(Day1Module3States.step_4, F.text == "ü™û –ó–µ—Ä–∫–∞–ª–æ –¥–ª—è —Ç—Ä–µ–≤–æ–≥–∏")
async def step_4_to_5(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —à–∞–≥–∞ 4 –∫ —à–∞–≥—É 5."""
    await state.set_state(Day1Module3States.step_5)
    
    await message.answer(
        "–ò–Ω–æ–≥–¥–∞ —Ç—Ä–µ–≤–æ–≥–∞ —Å–∏–¥–∏—Ç –≤ –º—ã—Å–ª—è—Ö üí≠, –∏–Ω–æ–≥–¥–∞ –≤ —Ç–µ–ª–µ ‚Äî —Å–∂–∞—Ç—ã–µ –ø–ª–µ—á–∏, –∫–æ–º –≤ –≥–æ—Ä–ª–µ. –ó–∞–º–µ—á–∞—è —ç—Ç–æ, —Ç—ã –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –Ω–∞—á–∏–Ω–∞–µ—à—å –≤–∏–¥–µ—Ç—å –µ—ë —Ä–∞–Ω—å—à–µ –∏ –ª–µ–≥—á–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è.",
        reply_markup=get_step_keyboard(5)
    )

# –®–∞–≥ 5 -> –®–∞–≥ 6
@router.message(Day1Module3States.step_5, F.text == "üëÄ –ó–∞–º–µ—á–∞—Ç—å —Ç—Ä–µ–≤–æ–≥—É —Ä–∞–Ω—å—à–µ")
async def step_5_to_6(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —à–∞–≥–∞ 5 –∫ —à–∞–≥—É 6."""
    await state.set_state(Day1Module3States.step_6)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º (–µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    image_path = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(__file__))), "assets", "d1m3", "d1m3_6.jpg")
    
    if os.path.exists(image_path):
        image_file = FSInputFile(image_path)
        await message.answer_photo(
            photo=image_file,
            caption="–¢–∞–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞. –ß–µ–º —á–∞—â–µ –∑–∞–º–µ—á–∞–µ—à—å, —Ç–µ–º –º–µ–Ω—å—à–µ —Ç—Ä–µ–≤–æ–≥–∞ —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ–±–æ–π, –∏ —Ç–µ–º –±–æ–ª—å—à–µ —É —Ç–µ–±—è —Å–≤–æ–±–æ–¥—ã.",
            reply_markup=get_step_keyboard(6)
        )
    else:
        await message.answer(
            "–¢–∞–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞. –ß–µ–º —á–∞—â–µ –∑–∞–º–µ—á–∞–µ—à—å, —Ç–µ–º –º–µ–Ω—å—à–µ —Ç—Ä–µ–≤–æ–≥–∞ —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ–±–æ–π, –∏ —Ç–µ–º –±–æ–ª—å—à–µ —É —Ç–µ–±—è —Å–≤–æ–±–æ–¥—ã.",
            reply_markup=get_step_keyboard(6)
        )

# –®–∞–≥ 6 -> –®–∞–≥ 7
@router.message(Day1Module3States.step_6, F.text == "üïäÔ∏è –ë–æ–ª—å—à–µ —Å–≤–æ–±–æ–¥—ã")
async def step_6_to_7(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —à–∞–≥–∞ 6 –∫ —à–∞–≥—É 7."""
    await state.set_state(Day1Module3States.step_7)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º (–µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    image_path = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(__file__))), "assets", "d1m3", "d1m3_7.jpg")
    
    if os.path.exists(image_path):
        image_file = FSInputFile(image_path)
        await message.answer_photo(
            photo=image_file,
            caption="‚úçÔ∏è –ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –º–∞–ª–µ–Ω—å–∫—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É.\n"
                    "–í—Å–ø–æ–º–Ω–∏ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –∏ –∑–∞–¥–∞–π —Å–µ–±–µ –≤–æ–ø—Ä–æ—Å:\n"
                    "üëâ ¬´–ö–æ–≥–¥–∞ —è –∑–∞–º–µ—Ç–∏–ª —Ç—Ä–µ–≤–æ–≥—É?¬ª\n\n"
                    "–í—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏ –∑–∞–ø–∏—à–∏ —Å–≤–æ–∏ –º—ã—Å–ª–∏:\n"
                    "üìì –º–æ–∂–Ω–æ –≤ –ª–∏—á–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫\n"
                    "üí¨ –º–æ–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –º–Ω–µ —Ç–µ–∫—Å—Ç–æ–º\n"
                    "üé§ –∏–ª–∏ –¥–∞–∂–µ –≥–æ–ª–æ—Å–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º",
            reply_markup=get_step_keyboard(7)
        )
    else:
        await message.answer(
            "‚úçÔ∏è –ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –º–∞–ª–µ–Ω—å–∫—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É.\n"
            "–í—Å–ø–æ–º–Ω–∏ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –∏ –∑–∞–¥–∞–π —Å–µ–±–µ –≤–æ–ø—Ä–æ—Å:\n"
            "üëâ ¬´–ö–æ–≥–¥–∞ —è –∑–∞–º–µ—Ç–∏–ª —Ç—Ä–µ–≤–æ–≥—É?¬ª\n\n"
            "–í—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏ –∑–∞–ø–∏—à–∏ —Å–≤–æ–∏ –º—ã—Å–ª–∏:\n"
            "üìì –º–æ–∂–Ω–æ –≤ –ª–∏—á–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫\n"
            "üí¨ –º–æ–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –º–Ω–µ —Ç–µ–∫—Å—Ç–æ–º\n"
            "üé§ –∏–ª–∏ –¥–∞–∂–µ –≥–æ–ª–æ—Å–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º",
            reply_markup=get_step_keyboard(7)
        )

# –®–∞–≥ 7 -> –®–∞–≥ 8 (–ø—Ä–∏–Ω–∏–º–∞–µ–º –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ)
@router.message(Day1Module3States.step_7, F.text == "‚úÖ –ì–æ—Ç–æ–≤–æ")
@router.message(Day1Module3States.step_7, F.text)
@router.message(Day1Module3States.step_7, F.voice)
async def step_7_to_8(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —à–∞–≥–∞ 7 –∫ —à–∞–≥—É 8."""
    await state.set_state(Day1Module3States.step_8)
    
    await message.answer(
        "–°–µ–≥–æ–¥–Ω—è –º—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å —Å —Ç—Ä–µ–≤–æ–≥–æ–π –∏ —É–≤–∏–¥–µ–ª–∏, —á—Ç–æ –æ–Ω–∞ –Ω–µ –≤—Ä–∞–≥, –∞ —Å–∏–≥–Ω–∞–ª üö®\n"
        "–ú—ã —Ä–∞–∑–æ–±—Ä–∞–ª–∏, –ø–æ—á–µ–º—É —Ç–µ–ª–æ —Ç–∞–∫ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç, –∏ —á—Ç–æ —Ç—Ä–µ–≤–æ–≥–∞ –∏–Ω–æ–≥–¥–∞ ¬´–ø–µ—Ä–µ–±–∞—Ä—â–∏–≤–∞–µ—Ç¬ª.",
        reply_markup=get_step_keyboard(8)
    )

# –®–∞–≥ 8 -> –®–∞–≥ 9
@router.message(Day1Module3States.step_8, F.text == "ü§î –ü–æ–Ω—è—Ç–Ω–æ")
async def step_8_to_9(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —à–∞–≥–∞ 8 –∫ —à–∞–≥—É 9."""
    await state.set_state(Day1Module3States.step_9)
    
    await message.answer(
        "–ú—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª–∏ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–∞–∫—Ç–∏–∫—É üå¨Ô∏è (–≤–¥–æ—Ö 4 ‚Äî –≤—ã–¥–æ—Ö 6), –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–∞–µ—Ç —Å–Ω–∏–∂–∞—Ç—å –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ.\n"
        "–ê –≤–µ—á–µ—Ä–æ–º –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞–ª–∏—Å—å –∑–∞–º–µ—á–∞—Ç—å —Ç—Ä–µ–≤–æ–≥—É –≤ –º—ã—Å–ª—è—Ö –∏ —Ç–µ–ª–µ ‚úçÔ∏è",
        reply_markup=get_step_keyboard(9)
    )

# –®–∞–≥ 9 -> –®–∞–≥ 10
@router.message(Day1Module3States.step_9, F.text == "üå∏ –ó–∞–ø–æ–º–Ω–∏–ª")
async def step_9_to_10(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —à–∞–≥–∞ 9 –∫ —à–∞–≥—É 10."""
    await state.set_state(Day1Module3States.step_10)
    
    await message.answer(
        "–ü–µ—Ä–≤—ã–π —à–∞–≥ —Å–¥–µ–ª–∞–Ω üí™ –¢—ã –º–æ–ª–æ–¥–µ—Ü!\n"
        "–ò –ø–æ–º–Ω–∏: –∫ –ª—é–±–æ–º—É –º–æ–¥—É–ª—é –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è —á–µ—Ä–µ–∑ –º–µ–Ω—é ¬´–í—ã–±—Ä–∞—Ç—å –º–æ–¥—É–ª—å¬ª üìñ‚ú®",
        reply_markup=get_step_keyboard(10)
    )

# –®–∞–≥ 10 -> –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –º–æ–¥—É–ª—è
@router.message(Day1Module3States.step_10, F.text == "üôå –û—Ç–ª–∏—á–Ω–æ")
async def complete_day_1_module_3(message: Message, state: FSMContext):
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ç—Ä–µ—Ç–∏–π –º–æ–¥—É–ª—å –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è."""
    import database as db
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≤–µ—Ä—à–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–¥–∏—Ç–∞—Ü–∏–µ–π (–µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    image_path = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(__file__))), "assets", "d1m3", "d1m3_11.jpg")
    
    if os.path.exists(image_path):
        image_file = FSInputFile(image_path)
        await message.answer_photo(
            photo=image_file,
            caption="‚ú® –ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –∑–∞–≤–µ—Ä—à–∏–º –¥–µ–Ω—å –º–µ–¥–∏—Ç–∞—Ü–∏–µ–π.\n"
                    "üéß ¬´–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—ã—Ö–∞–Ω–∏—è¬ª ‚Äî —ç—Ç–æ –∫–æ—Ä–æ—Ç–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –∑–∞–º–µ–¥–ª–∏—Ç—å—Å—è, –æ—Ç–ø—É—Å—Ç–∏—Ç—å –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —Å–ø–æ–∫–æ–π–Ω—ã–π —Å–æ–Ω üòåüåô\n\n"
                    "–ü—Ä–æ—Å—Ç–æ —É—Å—Ç—Ä–æ–π—Å—è –ø–æ—É–¥–æ–±–Ω–µ–µ, –∑–∞–∫—Ä–æ–π –≥–ª–∞–∑–∞ –∏ —Å–ª–µ–¥–∏ –∑–∞ –¥—ã—Ö–∞–Ω–∏–µ–º.",
            reply_markup=get_step_keyboard(10)  # –û—Å—Ç–∞–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        )
    else:
        await message.answer(
            "‚ú® –ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –∑–∞–≤–µ—Ä—à–∏–º –¥–µ–Ω—å –º–µ–¥–∏—Ç–∞—Ü–∏–µ–π.\n"
            "üéß ¬´–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—ã—Ö–∞–Ω–∏—è¬ª ‚Äî —ç—Ç–æ –∫–æ—Ä–æ—Ç–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –∑–∞–º–µ–¥–ª–∏—Ç—å—Å—è, –æ—Ç–ø—É—Å—Ç–∏—Ç—å –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —Å–ø–æ–∫–æ–π–Ω—ã–π —Å–æ–Ω üòåüåô\n\n"
            "–ü—Ä–æ—Å—Ç–æ —É—Å—Ç—Ä–æ–π—Å—è –ø–æ—É–¥–æ–±–Ω–µ–µ, –∑–∞–∫—Ä–æ–π –≥–ª–∞–∑–∞ –∏ —Å–ª–µ–¥–∏ –∑–∞ –¥—ã—Ö–∞–Ω–∏–µ–º.",
            reply_markup=get_step_keyboard(10)  # –û—Å—Ç–∞–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏—Ç–∞—Ü–∏—é –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º (–µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    audio_path = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(__file__))), "assets", "meditations", "meditation_1.mp3")
    
    if os.path.exists(audio_path):
        audio_file = FSInputFile(audio_path)
        await message.answer_audio(
            audio=audio_file,
            caption="üéß –ú–µ–¥–∏—Ç–∞—Ü–∏—è ¬´–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—ã—Ö–∞–Ω–∏—è¬ª",
            title="–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—ã—Ö–∞–Ω–∏—è",
            performer="–¢–∏—Ö–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏"
        )
    else:
        await message.answer("üéß –ú–µ–¥–∏—Ç–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–∫–ª–∞–¥–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å
    user_id = message.from_user.id
    await db.update_user_bookmark(user_id, course_id=1, day=2, module=1)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
    from handlers.course_flow import show_main_menu
    await state.clear()
    await show_main_menu(message, user_id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é" –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç—Ä–µ—Ç—å–µ–≥–æ –º–æ–¥—É–ª—è
@router.message(Day1Module3States.step_1, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
@router.message(Day1Module3States.step_2, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
@router.message(Day1Module3States.step_3, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
@router.message(Day1Module3States.step_4, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
@router.message(Day1Module3States.step_5, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
@router.message(Day1Module3States.step_6, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
@router.message(Day1Module3States.step_7, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
@router.message(Day1Module3States.step_8, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
@router.message(Day1Module3States.step_9, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
@router.message(Day1Module3States.step_10, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main_menu_from_module(message: Message, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    from handlers.course_flow import show_main_menu
    await state.clear()
    await show_main_menu(message, message.from_user.id)
