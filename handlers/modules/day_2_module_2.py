"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –¥–Ω—è, –≤—Ç–æ—Ä–æ–≥–æ –º–æ–¥—É–ª—è.
–ü—Ä–∏—Ç—á–∞ –≠–∑–æ–ø–∞ –æ –ª—É–∫–µ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è.
"""

from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from FSM.states import Day2Module2States

router = Router()

def get_step_keyboard(step: int) -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —à–∞–≥–∞."""
    keyboards = {
        1: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üìñ –•–æ—á—É —É—Å–ª—ã—à–∞—Ç—å")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        ),
        2: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="ü§î –ü–æ—á–µ–º—É –Ω–µ—Ç?")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        ),
        3: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üèπ –õ—É–∫ –Ω—É–∂–µ–Ω –æ—Ç–¥—ã—Ö")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        ),
        4: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üåø –†–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏–ª—ã")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        ),
        5: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        ),
        6: ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üåø –°—Ç–∞–ª–æ –ª–µ–≥—á–µ")],
                [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        )
    }
    return keyboards.get(step, ReplyKeyboardMarkup(keyboard=[], resize_keyboard=True))

@router.message(F.text == "‚ñ∂Ô∏è –î–µ–Ω—å 2, –ú–æ–¥—É–ª—å 2")
async def start_day_2_module_2(message: Message, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Ç–æ—Ä–æ–π –¥–µ–Ω—å, –≤—Ç–æ—Ä–æ–π –º–æ–¥—É–ª—å."""
    await state.set_state(Day2Module2States.step_1)
    
    await message.answer(
        "‚ú® –ò–Ω–æ–≥–¥–∞ –ø—Ä–æ—Å—Ç—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ–¥–∞—é—Ç –≤–∞–∂–Ω—ã–µ –∏—Å—Ç–∏–Ω—ã –ª—É—á—à–µ –ª—é–±—ã—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.\n"
        "–°–µ–π—á–∞—Å —è —Ä–∞—Å—Å–∫–∞–∂—É –ø—Ä–∏—Ç—á—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç: –¥–∞–∂–µ –º—É–¥—Ä–æ—Å—Ç–∏ –Ω—É–∂–µ–Ω –æ—Ç–¥—ã—Ö, –∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä—É—à–∞–µ—Ç.",
        reply_markup=get_step_keyboard(1)
    )

# –®–∞–≥ 1 -> –®–∞–≥ 2
@router.message(Day2Module2States.step_1, F.text == "üìñ –•–æ—á—É —É—Å–ª—ã—à–∞—Ç—å")
async def step_1_to_2(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —à–∞–≥–∞ 1 –∫ —à–∞–≥—É 2."""
    await state.set_state(Day2Module2States.step_2)
    
    await message.answer(
        "üìñ –ì–æ–≤–æ—Ä—è—Ç, –æ–¥–Ω–∞–∂–¥—ã –≠–∑–æ–ø –æ—Ç–¥—ã—Ö–∞–ª –∏ –∏–≥—Ä–∞–ª —Å –¥–µ—Ç—å–º–∏.\n"
        "–ü—Ä–æ—Ö–æ–∂–∏–π —É–≤–∏–¥–µ–ª —ç—Ç–æ –∏ —Å —É—Å–º–µ—à–∫–æ–π —Å–ø—Ä–æ—Å–∏–ª:\n"
        "‚Äî –†–∞–∑–≤–µ –ø–æ–¥–æ–±–∞–µ—Ç –º—É–¥—Ä–æ–º—É —á–µ–ª–æ–≤–µ–∫—É —Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è —Ç–∞–∫ –Ω–µ—Å–µ—Ä—å—ë–∑–Ω–æ?",
        reply_markup=get_step_keyboard(2)
    )

# –®–∞–≥ 2 -> –®–∞–≥ 3
@router.message(Day2Module2States.step_2, F.text == "ü§î –ü–æ—á–µ–º—É –Ω–µ—Ç?")
async def step_2_to_3(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —à–∞–≥–∞ 2 –∫ —à–∞–≥—É 3."""
    await state.set_state(Day2Module2States.step_3)
    
    await message.answer(
        "–≠–∑–æ–ø –≤–∑—è–ª –≤ —Ä—É–∫–∏ –ª—É–∫ –∏ —Å–∫–∞–∑–∞–ª:\n"
        "‚Äî –ï—Å–ª–∏ –¥–µ—Ä–∂–∞—Ç—å –µ–≥–æ –≤—Å—ë –≤—Ä–µ–º—è –Ω–∞—Ç—è–Ω—É—Ç—ã–º, –æ–Ω –±—ã—Å—Ç—Ä–æ –ø–æ—Ç–µ—Ä—è–µ—Ç —Å–∏–ª—É –∏ —Å–ª–æ–º–∞–µ—Ç—Å—è. –ù–æ –µ—Å–ª–∏ –¥–∞–≤–∞—Ç—å –µ–º—É –æ—Ç–¥—ã—Ö, –æ–Ω –±—É–¥–µ—Ç —Å–ª—É–∂–∏—Ç—å –¥–æ–ª–≥–æ –∏ —Å—Ç—Ä–µ–ª—è—Ç—å –º–µ—Ç–∫–æ.",
        reply_markup=get_step_keyboard(3)
    )

# –®–∞–≥ 3 -> –®–∞–≥ 4
@router.message(Day2Module2States.step_3, F.text == "üèπ –õ—É–∫ –Ω—É–∂–µ–Ω –æ—Ç–¥—ã—Ö")
async def step_3_to_4(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —à–∞–≥–∞ 3 –∫ —à–∞–≥—É 4."""
    await state.set_state(Day2Module2States.step_4)
    
    await message.answer(
        "–ò –¥–æ–±–∞–≤–∏–ª:\n"
        "‚Äî –¢–∞–∫ –∏ —Å —á–µ–ª–æ–≤–µ–∫–æ–º. –ï—Å–ª–∏ –∂–∏—Ç—å –≤ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–∏, —Ç—Ä–µ–≤–æ–≥–∞ –ª–∏—à—å —Ä–∞—Å—Ç—ë—Ç. –ù–æ —Å—Ç–æ–∏—Ç –ø–æ–∑–≤–æ–ª–∏—Ç—å —Å–µ–±–µ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è ‚Äî –∏ —Å–∏–ª—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è.",
        reply_markup=get_step_keyboard(4)
    )

# –®–∞–≥ 4 -> –®–∞–≥ 5
@router.message(Day2Module2States.step_4, F.text == "üåø –†–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏–ª—ã")
async def step_4_to_5(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —à–∞–≥–∞ 4 –∫ —à–∞–≥—É 5."""
    await state.set_state(Day2Module2States.step_5)
    
    await message.answer(
        "üå¨Ô∏è –ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞–ø–æ–º–Ω–∏–º —ç—Ç—É –º—É–¥—Ä–æ—Å—Ç—å, –Ω–æ –∏ –ø—Ä–∏–º–µ–Ω–∏–º –µ—ë.\n"
        "–ú—ã —Å–Ω–æ–≤–∞ –≤–µ—Ä–Ω—ë–º—Å—è –∫ –Ω–∞—à–µ–π –ø—Ä–∞–∫—Ç–∏–∫–µ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è ‚Äî –ø—Ä–æ—Å—Ç–æ–π, –Ω–æ –¥–µ–π—Å—Ç–≤–µ–Ω–Ω–æ–π.\n"
        "–ù–µ–º–Ω–æ–≥–æ –¥—ã—Ö–∞–Ω–∏—è –∏ —Ç–µ–ª–µ—Å–Ω–æ–≥–æ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è –ø–æ–º–æ–≥—É—Ç –ø—Ä–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–æ, –æ —á—ë–º –≥–æ–≤–æ—Ä–∏–ª –≠–∑–æ–ø.",
        reply_markup=get_step_keyboard(5)
    )

# –®–∞–≥ 5 -> –®–∞–≥ 6
@router.message(Day2Module2States.step_5, F.text == "‚úÖ –ì–æ—Ç–æ–≤ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å")
async def step_5_to_6(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —à–∞–≥–∞ 5 –∫ —à–∞–≥—É 6."""
    await state.set_state(Day2Module2States.step_6)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —Å –ø—Ä–∞–∫—Ç–∏–∫–æ–π (–µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    import os
    from aiogram.types import FSInputFile
    
    video_path = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(__file__))), "assets", "practices", "practice_2.mp4")
    
    caption_text = (
        "**–ú—ã—à–µ—á–Ω–∞—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è**\n\n"
        "–°–æ–∂–º–∏ ‚úä –∫—É–ª–∞–∫–∏ –Ω–∞ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥ ‚Äî –∏ –æ—Ç–ø—É—Å—Ç–∏.\n"
        "–ü–æ–¥–Ω–∏–º–∏ üí™ –ø–ª–µ—á–∏ –∫ —É—à–∞–º ‚Äî –∑–∞–¥–µ—Ä–∂–∏ –∏ —Ä–∞—Å—Å–ª–∞–±—å –≤–Ω–∏–∑.\n"
        "–°–æ–∂–º–∏ üôÇ –ª–∏—Ü–æ (—á–µ–ª—é—Å—Ç–∏, –±—Ä–æ–≤–∏) ‚Äî –∞ –ø–æ—Ç–æ–º –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–ø—É—Å—Ç–∏.\n\n"
        "‚è± –ü–æ–≤—Ç–æ—Ä–∏ —Ü–∏–∫–ª 2‚Äì3 —Ä–∞–∑–∞ –∏ –æ–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, –∫–∞–∫ —Ç–µ–ª–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –º—è–≥—á–µ –∏ —Å–ø–æ–∫–æ–π–Ω–µ–µ."
    )

    if os.path.exists(video_path):
        video_file = FSInputFile(video_path)
        await message.answer_video(
            video=video_file,
            caption=caption_text,
            parse_mode="Markdown",
            reply_markup=get_step_keyboard(6)
        )
    else:
        await message.answer(
            text=caption_text,
            parse_mode="Markdown",
            reply_markup=get_step_keyboard(6)
        )

# –®–∞–≥ 6 -> –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –º–æ–¥—É–ª—è
@router.message(Day2Module2States.step_6, F.text == "üåø –°—Ç–∞–ª–æ –ª–µ–≥—á–µ")
async def complete_day_2_module_2(message: Message, state: FSMContext):
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç –≤—Ç–æ—Ä–æ–π –¥–µ–Ω—å, –≤—Ç–æ—Ä–æ–π –º–æ–¥—É–ª—å."""
    import database as db
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≤–µ—Ä—à–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.answer(
        "üìå –î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤–µ—á–µ—Ä–æ–º –≤ —Å–ª–µ–¥—É—é—â–µ–º –º–æ–¥—É–ª–µ!\n"
        "–ú—ã –≤—Å–ø–æ–º–Ω–∏–º, —á—Ç–æ —É–∑–Ω–∞–ª–∏ —Å–µ–≥–æ–¥–Ω—è, –µ—â—ë —Ä–∞–∑ –ø–æ–≤—Ç–æ—Ä–∏–º –ø—Ä–∞–∫—Ç–∏–∫—É –∏ –ø–æ—Å–ª—É—à–∞–µ–º –∫–æ—Ä–æ—Ç–∫—É—é –º–µ–¥–∏—Ç–∞—Ü–∏—é –ø—Ä–æ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ –∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏–µ —Ç—Ä–µ–≤–æ–≥–∏."
    )
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–∫–ª–∞–¥–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å
    user_id = message.from_user.id
    await db.update_user_bookmark(user_id, course_id=1, day=2, module=3)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
    from handlers.course_flow import show_main_menu
    await state.clear()
    await show_main_menu(message, user_id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é" –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –¥–Ω—è, –≤—Ç–æ—Ä–æ–≥–æ –º–æ–¥—É–ª—è
@router.message(Day2Module2States.step_1, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
@router.message(Day2Module2States.step_2, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
@router.message(Day2Module2States.step_3, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
@router.message(Day2Module2States.step_4, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
@router.message(Day2Module2States.step_5, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
@router.message(Day2Module2States.step_6, F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main_menu(message: Message, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –ª—é–±–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –¥–Ω—è, –≤—Ç–æ—Ä–æ–≥–æ –º–æ–¥—É–ª—è."""
    from handlers.course_flow import show_main_menu
    await state.clear()
    user_id = message.from_user.id
    await show_main_menu(message, user_id)
