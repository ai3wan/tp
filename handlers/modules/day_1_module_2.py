# handlers/modules/day_1_module_2.py

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import os

router = Router()

class Day1Module2States(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –î–Ω—è 1, –ú–æ–¥—É–ª—è 2."""
    introduction = State()
    gallery = State()
    practice_reminder = State()
    practice_video = State()
    completion = State()

def get_introduction_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–≤–µ–¥–µ–Ω–∏—è."""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–î–∞, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ"), KeyboardButton(text="–†–∞—Å—Å–∫–∞–∂–∏")],
            [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )

def get_gallery_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚óÄÔ∏è", callback_data="gallery_prev"),
                InlineKeyboardButton(text="‚ñ∂Ô∏è", callback_data="gallery_next")
            ]
        ]
    )

def get_gallery_reply_keyboard() -> ReplyKeyboardMarkup:
    """–†–µ–ø–ª–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ –≥–∞–ª–µ—Ä–µ–∏."""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üå∏ –ö–ª–∞—Å—Å"), KeyboardButton(text="‚ú® –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ")],
            [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )

def get_practice_reminder_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–∞–∫—Ç–∏–∫–µ."""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚è© –í–ø–µ—Ä—ë–¥"), KeyboardButton(text="üôå –î–∞–≤–∞–π")],
            [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )

def get_practice_video_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–∏–¥–µ–æ –ø—Ä–∞–∫—Ç–∏–∫–∏."""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üåø –£–∂–µ –ª—É—á—à–µ"), KeyboardButton(text="üòå –°–ø–æ–∫–æ–π–Ω–µ–µ")],
            [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )

def get_completion_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–æ–¥—É–ª—è."""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üôå –î–æ –≤—Å—Ç—Ä–µ—á–∏"), KeyboardButton(text="üîÑ –î–∞–≤–∞–π –ø–æ–≤—Ç–æ—Ä–∏–º")],
            [KeyboardButton(text="üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏
gallery_data = [
    {
        "image": "d1m2_1.jpg",
        "text": "–ë—É–¥–¥–∞ –≥–æ–≤–æ—Ä–∏–ª —Å–≤–æ–∏–º —É—á–µ–Ω–∏–∫–∞–º:\n¬´–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ —Å–µ–±–µ —á–µ–ª–æ–≤–µ–∫–∞, –≤ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ–ø–∞–ª–∞ —Å—Ç—Ä–µ–ª–∞. –û–Ω –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç —Å–∏–ª—å–Ω—É—é –±–æ–ª—å ‚Äî –∏ —ç—Ç–æ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ. –ù–æ —Ç–µ–ø–µ—Ä—å –≤–æ–æ–±—Ä–∞–∑–∏—Ç–µ, —á—Ç–æ –≤ —Ç–æ–≥–æ –∂–µ —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ–ø–∞–¥–∞–µ—Ç –µ—â—ë –æ–¥–Ω–∞ —Å—Ç—Ä–µ–ª–∞ –≤ —Ç–æ –∂–µ —Å–∞–º–æ–µ –º–µ—Å—Ç–æ. –í—Ç–æ—Ä–∞—è —Ä–∞–Ω–∞ –ø—Ä–∏—á–∏–Ω—è–µ—Ç –∫—É–¥–∞ –±–æ–ª—å—à–µ —Å—Ç—Ä–∞–¥–∞–Ω–∏—è, —á–µ–º –ø–µ—Ä–≤–∞—è¬ª."
    },
    {
        "image": "d1m2_2.jpg", 
        "text": "–£—á–µ–Ω–∏–∫–∏ —É–¥–∏–≤–∏–ª–∏—Å—å: ¬´–£—á–∏—Ç–µ–ª—å, –∞ –∑–∞—á–µ–º –≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–µ–ª–∞?¬ª\n–ë—É–¥–¥–∞ –æ—Ç–≤–µ—Ç–∏–ª: ¬´–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–µ–ª–∞ ‚Äî —ç—Ç–æ —Ç–æ, —á—Ç–æ –¥–∞—ë—Ç –Ω–∞–º —Å–∞–º–∞ –∂–∏–∑–Ω—å: –±–æ–ª–µ–∑–Ω—å, —É—Å—Ç–∞–ª–æ—Å—Ç—å, –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è, —Å—Ç—Ä–µ—Å—Å. –≠—Ç–æ —Ç–æ, —á—Ç–æ –Ω–µ–ª—å–∑—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–∑–±–µ–∂–∞—Ç—å. –ù–æ –≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–µ–ª–∞ ‚Äî —ç—Ç–æ —Ç–æ, —á—Ç–æ –º—ã –ø—É—Å–∫–∞–µ–º —Å–∞–º–∏. –≠—Ç–æ –Ω–∞—à–∏ –º—ã—Å–ª–∏, —Ç—Ä–µ–≤–æ–≥–∞, —Å—Ç—Ä–∞—Ö–∏ –∏ –Ω–∞–∫—Ä—É—á–∏–≤–∞–Ω–∏–µ. –ú—ã –¥–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å —Ç—É–¥–∞, –≥–¥–µ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–µ–ª–æ–π¬ª."
    },
    {
        "image": "d1m2_3.jpg",
        "text": "–û–Ω –ø–æ—è—Å–Ω–∏–ª: ¬´–û–±—ã—á–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ —á—É–≤—Å—Ç–≤—É–µ—Ç –æ–±–µ —Å—Ç—Ä–µ–ª—ã. –ü–µ—Ä–≤–∞—è –ø—Ä–∏—á–∏–Ω—è–µ—Ç —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –∏–ª–∏ —Å–∏—Ç—É–∞—Ü–∏–æ–Ω–Ω—É—é –±–æ–ª—å, –∞ –≤—Ç–æ—Ä–∞—è —Ä–æ–∂–¥–∞–µ—Ç—Å—è –≤ —É–º–µ ‚Äî \"–ü–æ—á–µ–º—É —ç—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å —Å–æ –º–Ω–æ–π? –ß—Ç–æ –±—É–¥–µ—Ç –¥–∞–ª—å—à–µ? –Ø –Ω–µ —Å–ø—Ä–∞–≤–ª—é—Å—å!\". –ù–æ –º—É–¥—Ä—ã–π —á–µ–ª–æ–≤–µ–∫ —É—á–∏—Ç—Å—è –∑–∞–º–µ—á–∞—Ç—å: \"–î–∞, –±–æ–ª—å –µ—Å—Ç—å, —Å—Ç—Ä–µ—Å—Å –µ—Å—Ç—å, –Ω–æ —è –Ω–µ –æ–±—è–∑–∞–Ω —É—Å–∏–ª–∏–≤–∞—Ç—å –µ—ë –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–µ–ª–æ–π\". –ò —Ç–æ–≥–¥–∞ —Å—Ç—Ä–∞–¥–∞–Ω–∏–µ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –≤–¥–≤–æ–µ¬ª."
    }
]

@router.message(F.text == "‚ñ∂Ô∏è –î–µ–Ω—å 1, –ú–æ–¥—É–ª—å 2")
async def start_day_1_module_2(message: Message, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –î–µ–Ω—å 1, –ú–æ–¥—É–ª—å 2."""
    await state.set_state(Day1Module2States.introduction)
    
    await message.answer(
        "‚ú® –ó–Ω–∞–µ—à—å, —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å ‚Äî –Ω–µ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –Ω–∞—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –õ—é–¥–∏ —Å—Ç–∞–ª–∫–∏–≤–∞–ª–∏—Å—å —Å –Ω–µ–π —Ç—ã—Å—è—á–∏ –ª–µ—Ç –Ω–∞–∑–∞–¥ –∏ —Ç–æ–∂–µ –∏—Å–∫–∞–ª–∏ —Å–ø–æ—Å–æ–±—ã —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è. –°–µ–π—á–∞—Å —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –æ–¥–Ω—É –∫–æ—Ä–æ—Ç–∫—É—é, –Ω–æ –æ—á–µ–Ω—å –º—É–¥—Ä—É—é –ø—Ä–∏—Ç—á—É –Ω–∞ —ç—Ç—É —Ç–µ–º—É.",
        reply_markup=get_introduction_keyboard()
    )

@router.message(Day1Module2States.introduction, F.text.in_(["–î–∞, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ", "–†–∞—Å—Å–∫–∞–∂–∏"]))
async def show_gallery(message: Message, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–∞–ª–µ—Ä–µ—é —Å –ø—Ä–∏—Ç—á–µ–π."""
    await state.set_state(Day1Module2States.gallery)
    await state.update_data(gallery_index=0)  # –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏
    
    await show_gallery_image(message, 0)

async def show_gallery_image(message: Message, index: int):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –ø–æ –∏–Ω–¥–µ–∫—Å—É."""
    import os
    from aiogram.types import FSInputFile
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    gallery_item = gallery_data[index]
    
    # –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
    image_path = os.path.join(
        os.path.dirname(os.path.dirname(os.path.dirname(__file__))), 
        "assets", "d1m2", gallery_item["image"]
    )
    image_file = FSInputFile(image_path)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
    await message.answer_photo(
        photo=image_file,
        caption=gallery_item["text"],
        reply_markup=get_gallery_keyboard()
    )

@router.callback_query(F.data.startswith("gallery_"))
async def handle_gallery_navigation(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ –≥–∞–ª–µ—Ä–µ–µ."""
    data = await state.get_data()
    current_index = data.get("gallery_index", 0)
    
    if callback.data == "gallery_prev":
        new_index = (current_index - 1) % len(gallery_data)
    elif callback.data == "gallery_next":
        new_index = (current_index + 1) % len(gallery_data)
    else:
        return
    
    await state.update_data(gallery_index=new_index)
    
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
    await callback.message.delete()
    await show_gallery_image(callback.message, new_index)
    await callback.answer()

@router.message(Day1Module2States.gallery, F.text.in_(["üå∏ –ö–ª–∞—Å—Å", "‚ú® –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ"]))
async def continue_after_gallery(message: Message, state: FSMContext):
    """–ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –º–æ–¥—É–ª—å –ø–æ—Å–ª–µ –≥–∞–ª–µ—Ä–µ–∏."""
    await state.set_state(Day1Module2States.practice_reminder)
    
    await message.answer(
        "–ü–æ–º–Ω–∏—à—å –Ω–∞—à–µ –¥—ã—Ö–∞–Ω–∏–µ —É—Ç—Ä–æ–º? üòâ –í–¥–æ—Ö –Ω–∞ 4, –≤—ã–¥–æ—Ö –Ω–∞ 6.\n–î–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –µ—â—ë —Ä–∞–∑ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å ‚Äî –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª—è–µ—Ç –Ω–∞–≤—ã–∫ üí™üòå",
        reply_markup=get_practice_reminder_keyboard()
    )

@router.message(Day1Module2States.practice_reminder, F.text.in_(["‚è© –í–ø–µ—Ä—ë–¥", "üôå –î–∞–≤–∞–π"]))
async def show_practice_video(message: Message, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∏–¥–µ–æ –ø—Ä–∞–∫—Ç–∏–∫–∏."""
    await state.set_state(Day1Module2States.practice_video)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
    import os
    from aiogram.types import FSInputFile
    
    video_path = os.path.join(
        os.path.dirname(os.path.dirname(os.path.dirname(__file__))), 
        "assets", "practice_1.mp4"
    )
    video_file = FSInputFile(video_path)
    
    await message.answer_video(
        video=video_file,
        caption="<b>–î—ã—Ö–∞–Ω–∏–µ 4‚Äì6</b>\n\n–°–º–æ—Ç—Ä–∏ –Ω–∞ –≤–∏–¥–µ–æ: üîΩ –∫—Ä—É–≥ —Å—É–∂–∞–µ—Ç—Å—è ‚Äî –≤–¥–æ—Ö, üîº —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è ‚Äî –≤—ã–¥–æ—Ö.\n‚è± –ü–æ–¥—ã—à–∏ —Ç–∞–∫ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç —Å —Ç–∞–π–º–µ—Ä–æ–º.",
        parse_mode="HTML",
        reply_markup=get_practice_video_keyboard()
    )

@router.message(Day1Module2States.practice_video, F.text.in_(["üåø –£–∂–µ –ª—É—á—à–µ", "üòå –°–ø–æ–∫–æ–π–Ω–µ–µ"]))
async def complete_module(message: Message, state: FSMContext):
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç –º–æ–¥—É–ª—å."""
    await state.set_state(Day1Module2States.completion)
    
    await message.answer(
        "üìå –î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ —Å–ª–µ–¥—É—é—â–µ–º –º–æ–¥—É–ª–µ!\n–¢–∞–º –º—ã –≤—Å–ø–æ–º–Ω–∏–º, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è —É–∑–Ω–∞–ª–∏, –µ—â—ë —Ä–∞–∑ –ø–æ–≤—Ç–æ—Ä–∏–º –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–∞–∫—Ç–∏–∫—É üå¨Ô∏è –∏ –ø–æ—Å–ª—É—à–∞–µ–º –∫–æ—Ä–æ—Ç–∫—É—é –º–µ–¥–∏—Ç–∞—Ü–∏—é –¥–ª—è —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è üéß‚ú®",
        reply_markup=get_completion_keyboard()
    )

@router.message(Day1Module2States.completion, F.text == "üôå –î–æ –≤—Å—Ç—Ä–µ—á–∏")
async def finish_module(message: Message, state: FSMContext):
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç –º–æ–¥—É–ª—å –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–º—É."""
    from handlers.course_flow import complete_module
    await state.clear()
    await complete_module(message)

@router.message(Day1Module2States.completion, F.text == "üîÑ –î–∞–≤–∞–π –ø–æ–≤—Ç–æ—Ä–∏–º")
async def repeat_module(message: Message, state: FSMContext):
    """–ü–æ–≤—Ç–æ—Ä—è–µ—Ç –º–æ–¥—É–ª—å."""
    await start_day_1_module_2(message, state)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
@router.message(F.text == "üè† –í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main_menu_from_module(message: Message, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    from handlers.course_flow import show_main_menu
    await state.clear()
    await show_main_menu(message, message.from_user.id)